//!#version 440
#include "Random.glsl"
layout(local_size_x=16, local_size_y=16, local_size_z = 1) in;
layout(rgba32f, binding=0) writeonly uniform image2DArray heightmapOutput;//r = height, bga = normal

void main()
{
	vec4 color;
	vec2 tc = vec2(gl_GlobalInvocationID.xy) / float(gl_WorkGroupSize * gl_NumWorkGroups);
	
    vec3 p = toPolar(tc);
    color = fbmTerrain(tc*10)*0.33+0.5;
    color.yz = normalize(vec3(color.y,3,color.z)).xz*0.5 + 0.5;

	imageStore(heightmapOutput, ivec3(gl_GlobalInvocationID.xy,0), color );
}